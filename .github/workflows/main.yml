name: sync-v2

on:
  schedule:
    - cron: '* 0/5 * * *'  # 每 5 小时运行一次
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4

      - name: Clear v2_raw.txt and v2.txt
        run: |
          > v2_raw.txt
          > v2.txt

      - name: Append content from local wd.md
        run: |
          cat wd.md >> v2_raw.txt
          echo -e "\n" >> v2_raw.txt

      - name: Append content from dz1.txt links (any type, with base64 detection)
        run: |
          while IFS= read -r url; do
            [[ -z "$url" || "$url" =~ ^# ]] && continue

            raw_url="$url"
            if [[ "$url" == https://github.com/* ]]; then
              raw_url=$(echo "$url" | sed -E 's#https://github.com/([^/]+)/([^/]+)/blob/(.+)#https://raw.githubusercontent.com/\1/\2/\3#')
            fi

            echo "Fetching: $raw_url"
            content=$(curl -fsSL "$raw_url")

            if echo "$content" | grep -qE '^[A-Za-z0-9+/=]+$'; then
              echo "$content" | base64 -d >> v2_raw.txt || echo "# ⚠️ 解码失败: $raw_url" >> v2_raw.txt
            else
              echo "$content" >> v2_raw.txt
            fi

            echo -e "\n" >> v2_raw.txt
          done < dz1.txt

      - name: Append content from dz2.txt GitHub repositories (.txt/.md only, with base64 detection)
        run: |
          while IFS= read -r repo_url; do
            [[ -z "$repo_url" || "$repo_url" =~ ^# ]] && continue
            echo "Scanning repo: $repo_url"

            if [[ "$repo_url" =~ github.com/([^/]+)/([^/]+) ]]; then
              user="${BASH_REMATCH[1]}"
              repo="${BASH_REMATCH[2]}"
              api_url="https://api.github.com/repos/$user/$repo/git/trees/main?recursive=1"

              files=$(curl -s "$api_url" | jq -r '.tree[] | select(.type=="blob") | .path' | grep -Ei '\.txt$|\.md$')
              for file in $files; do
                raw_url="https://raw.githubusercontent.com/$user/$repo/main/$file"
                echo "Fetching file: $raw_url"
                content=$(curl -fsSL "$raw_url")

                if echo "$content" | grep -qE '^[A-Za-z0-9+/=]+$'; then
                  echo "$content" | base64 -d >> v2_raw.txt || echo "# ⚠️ 解码失败: $raw_url" >> v2_raw.txt
                else
                  echo "$content" >> v2_raw.txt
                fi

                echo -e "\n" >> v2_raw.txt
              done
            fi
          done < dz2.txt

      - name: Sort and rename nodes by city name
        run: |
          pip install requests
          python3 sort_by_city.py

      - name: Set Git identity
        run: |
          git config --global user.name "${{ github.repository_owner }}"
          git config --global user.email "${{ github.repository_owner }}@users.noreply.github.com"

      - name: Commit and push v2.txt
        run: |
          git add v2.txt
          git commit -m "Auto-sync v2.txt with sorted city names"
          git push
